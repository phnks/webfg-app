{
  "name": "webfg-gm-app",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@apollo/client": "^3.13.1",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.2.0",
    "@testing-library/user-event": "^13.5.0",
    "graphql": "^16.10.0",
    "graphql-ws": "^6.0.4",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-icons": "^5.5.0",
    "react-router-dom": "^7.2.0",
    "react-scripts": "5.0.1",
    "subscriptions-transport-ws": "^0.11.0",
    "web-vitals": "^2.1.4",
    "env-cmd": "^10.1.0"
  },
  "scripts": {
    "start": "env-cmd -f .env.dev react-scripts start",
    "build": "react-scripts build",
    "build:prod": "env-cmd -f .env.prod react-scripts build",
    "test": "react-scripts test",
    "start:bg": "nohup env-cmd -f .env.dev react-scripts start > webfg-gm-app.log 2>&1 & echo $! > webfg-gm-app.pid",
    "stop:bg": "if [ -f webfg-gm-app.pid ]; then kill $(cat webfg-gm-app.pid) && rm webfg-gm-app.pid && echo 'Stopped server.'; else echo 'Server not running (no PID file)'; fi",
    "restart:bg": "npm run stop:bg && sleep 1 && npm run start:bg",
    "eject": "react-scripts eject",
    "deploy:prod": "STACK_NAME=webfg-gm-app && export AWS_PROFILE=personal && npm run build:prod && sam deploy --stack-name ${STACK_NAME} --parameter-overrides Environment=prod DeploymentId=none --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --no-fail-on-empty-changeset && aws s3 sync build/ s3://$(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucketName`].OutputValue' --output text) --delete && aws cloudfront create-invalidation --distribution-id $(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' --output text) --paths \"/*\"",
    "deploy:qa": "DEPLOYMENT_ID=${DEPLOYMENT_ID:-none} && STACK_NAME=webfg-gm-app-qa${DEPLOYMENT_ID/#none/} && export AWS_PROFILE=personal && npm run build && sam deploy --stack-name ${STACK_NAME} --parameter-overrides Environment=qa DeploymentId=${DEPLOYMENT_ID} --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --no-fail-on-empty-changeset && aws s3 sync build/ s3://$(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucketName`].OutputValue' --output text) --delete && aws cloudfront create-invalidation --distribution-id $(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' --output text) --paths \"/*\""
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
