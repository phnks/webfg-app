type Encounter {
  encounterId: ID!
  name: String!
  description: String
  round: Int!
  initiative: Int!
  eventsCurrent: [EncounterEventLog]
  eventsHistory: [EncounterEventLog]
  createdAt: String
}

type EncounterEventLog {
  round: Int!
  events: [EncounterEvent]
}

type EncounterEvent {
  initiative: Int!
  type: TimelineEventType!
  character: Character
  action: Action
  description: String
}

enum TimelineEventType {
  CHARACTER_ADDED
  CHARACTER_REMOVED
  ACTION
  OBJECT_ADDED
  OBJECT_REMOVED
  ENCOUNTER_STARTED
  ENCOUNTER_ENDED
  ROUND_ADVANCED
  INITIATIVE_ADVANCED
}

input EncounterInput {
  name: String!
  description: String
}

input EncounterEventInput {
  initiative: Int!
  type: TimelineEventType!
  characterId: ID!
  actionId: ID
  description: String
}

input UpdateGridSizeInput {
  encounterId: ID!
  width: Int!
  height: Int!
}

input GridElementInput {
  x: Int!
  y: Int!
  type: String!
  properties: String
}

input TerrainElementInput {
  encounterId: ID!
  gridElement: GridElementInput!
}

input UpdateTerrainPositionInput {
  encounterId: ID!
  terrainId: ID!
  x: Int!
  y: Int!
}
