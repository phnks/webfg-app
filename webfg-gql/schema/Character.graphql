type Character {
  characterId: ID!
  name: String!
  nameLowerCase: String
  description: String
  characterCategory: CharacterCategory!
  will: Int!
  fatigue: Int # Deprecated - no longer used, kept for backwards compatibility

  mind: [MindThought]
  mindThoughts: [Thought]

  speed: CharacterAttribute
  weight: CharacterAttribute
  size: CharacterAttribute
  armour: CharacterAttribute!
  endurance: CharacterAttribute!
  lethality: CharacterAttribute!
  complexity: CharacterAttribute
  strength: CharacterAttribute!
  dexterity: CharacterAttribute!
  agility: CharacterAttribute!
  obscurity: CharacterAttribute
  resolve: CharacterAttribute!
  morale: CharacterAttribute!
  intelligence: CharacterAttribute!
  charisma: CharacterAttribute!
  seeing: CharacterAttribute
  hearing: CharacterAttribute
  light: CharacterAttribute
  noise: CharacterAttribute

  actionIds: [ID]
  actions: [Action]

  special: [String]

  stashIds: [ID]
  stash: [Object]
  equipmentIds: [ID]
  equipment: [Object]
  readyIds: [ID]
  ready: [Object]
  
  characterConditions: [CharacterCondition]
  conditions: [CharacterConditionWithDetails]
  
  # Custom target attribute total set by GM
  targetAttributeTotal: Int
  
  # Computed fields (only resolved when requested)
  groupedAttributes: GroupedAttributes
  readyGroupedAttributes: ReadyGroupedAttributes
  attributeBreakdown(attributeName: String!): [AttributeBreakdownStep!]
}

enum CharacterCategory {
  HUMAN
  TREPIDITE
  MONSTER
  CARVED
  ANTHRO
  ICER
  DAXMC
  QRTIS
  TYVIR
}

type CharacterAttribute {
  attribute: Attribute!
}

input CharacterAttributeInput {
  attribute: AttributeInput!
}

input CharacterInput {
  name: String!
  description: String
  characterCategory: CharacterCategory!
  will: Int!
  fatigue: Int # Deprecated - no longer used, kept for backwards compatibility
  mind: [MindThoughtInput]
  speed: CharacterAttributeInput
  weight: CharacterAttributeInput
  size: CharacterAttributeInput
  armour: CharacterAttributeInput!
  endurance: CharacterAttributeInput!
  lethality: CharacterAttributeInput!
  complexity: CharacterAttributeInput
  strength: CharacterAttributeInput!
  dexterity: CharacterAttributeInput!
  agility: CharacterAttributeInput!
  obscurity: CharacterAttributeInput
  resolve: CharacterAttributeInput!
  morale: CharacterAttributeInput!
  intelligence: CharacterAttributeInput!
  charisma: CharacterAttributeInput!
  seeing: CharacterAttributeInput
  hearing: CharacterAttributeInput
  light: CharacterAttributeInput
  noise: CharacterAttributeInput
  actionIds: [ID]
  special: [String]
  stashIds: [ID]
  equipmentIds: [ID]
  readyIds: [ID]
  characterConditions: [CharacterConditionInput]
  targetAttributeTotal: Int
}

type CharacterCondition {
  conditionId: ID!
  amount: Int!
}

type CharacterConditionWithDetails {
  conditionId: ID!
  name: String!
  description: String!
  conditionCategory: ConditionCategory!
  conditionType: ConditionType!
  conditionTarget: AttributeName!
  amount: Int!
}

input CharacterConditionInput {
  conditionId: ID!
  amount: Int!
}