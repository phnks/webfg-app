# Type representing the stored value data
type StoredValueData {
  valueId: ID!
}

# Type representing the stored value data input
input StoredValueDataInput {
  valueId: ID!
}

# Type representing the stored attribute data
type StoredAttributeData {
  attributeId: ID!
  attributeValue: Int!
}

# Type representing the stored skill data
type StoredSkillData {
  skillId: ID!
  skillValue: Int!
}

type Character {
  characterId: ID!
  name: String!

  attributeData: [StoredAttributeData!]! 
  attributes: [CharacterAttribute]!      

  skillData: [StoredSkillData!]! 
  skills: [CharacterSkill!]!     

  stats: Stats!

  valueData: [StoredValueData!]! 
  values: [CharacterValue]!      

  conditionIds: [ID] 
  conditions: [Trait] 

  bodyId: ID
  body: [Object] 

  actionIds: [ID]
  actions: [Action]

  traitIds: [ID] 
  traits: [Trait] 

  # inventoryIds: [ID] # Removed
  # inventory: [Object]  # Removed
  # equipmentIds: [ID] # Removed
  # equipment: [Object]  # Removed
}

input CharacterSkillInput { 
  skillId: ID!
  skillValue: Int!
}

type CharacterSkill {
  skillId: ID!
  skillValue: Int!
  skillName: SkillName!
  skillCategory: SkillCategory!
}

input CharacterAttributeInput { 
  attributeId: ID!
  attributeValue: Int!
}

type CharacterAttribute {
  attributeId: ID!
  attributeValue: Int!
  attributeName: AttributeName!
}

type CharacterValue {
  valueId: ID!
  valueName: ValueName!
}
