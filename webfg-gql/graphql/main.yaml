AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Main GraphQL API template'

Parameters:
  Environment:
    Type: String
    Description: 'Deployment environment (prod/qa)'
    AllowedValues:
      - 'prod'
      - 'qa'
  ServiceName:
    Type: String
    Description: 'Name of the service'
  AppSyncApiName:
    Type: String
    Description: 'Name for the AppSync API'
  CharactersDataSourceName:
    Type: String
    Description: 'Name of db data source'
  ObjectsDataSourceName:
    Type: String
    Description: 'Name of db data source'
  ActionsDataSourceName:
    Type: String
    Description: 'Name of db data source'
  ConditionsDataSourceName:
    Type: String
    Description: 'Name of db data source'
  EncountersDataSourceName:
    Type: String
    Description: 'Name of db data source'
  ThoughtsDataSourceName:
    Type: String
    Description: 'Name of db data source'
  CharactersTableName:
    Type: String
    Description: 'Name of table'
  ObjectsTableName:
    Type: String
    Description: 'Name of table'
  ActionsTableName:
    Type: String
    Description: 'Name of table'
  ConditionsTableName:
    Type: String
    Description: 'Name of table'
  PhnksCertArn:
    Type: String
    Description: 'ARN of the certificate for the custom domain'
  PhnksHostedZoneId:
    Type: String
    Description: 'Hosted Zone ID for the custom domain'
  DomainName:
    Type: String
    Description: 'Domain name of the service'
  SchemaS3Key:
    Type: String
    Description: S3 key for the GraphQL schema file
  SchemaS3BucketName:
    Type: String
    Description: "Name of the S3 bucket containing the GraphQL schema"
  EncountersTableName:
    Type: String
    Description: 'Name of encounters table'
  ThoughtsTableName:
    Type: String
    Description: 'Name of thoughts table'

Globals:
  Function:
    Timeout: 30
    MemorySize: 1024
    Runtime: nodejs20.x # Or your preferred runtime

Resources:
  ApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./api.yaml 
      Parameters:
        Environment: !Ref Environment
        ServiceName: !Ref ServiceName
        AppSyncApiName: !Ref AppSyncApiName
        PhnksCertArn: !Ref PhnksCertArn
        PhnksHostedZoneId: !Ref PhnksHostedZoneId
        DomainName: !Ref DomainName
        SchemaS3Key: !Ref SchemaS3Key
        SchemaS3BucketName: !Ref SchemaS3BucketName

  DataSourcesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./data-sources.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        CharactersDataSourceName: !Ref CharactersDataSourceName
        ObjectsTableName: !Ref ObjectsTableName
        ObjectsDataSourceName: !Ref ObjectsDataSourceName
        ActionsDataSourceName: !Ref ActionsDataSourceName
        ConditionsDataSourceName: !Ref ConditionsDataSourceName
        EncountersDataSourceName: !Ref EncountersDataSourceName
        ThoughtsDataSourceName: !Ref ThoughtsDataSourceName
        CharactersTableName: !Ref CharactersTableName
        ActionsTableName: !Ref ActionsTableName
        ConditionsTableName: !Ref ConditionsTableName
        EncountersTableName: !Ref EncountersTableName
        ThoughtsTableName: !Ref ThoughtsTableName

  CharacterResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataSourcesStack
    Properties:
      TemplateURL: ./character-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        CharactersDataSourceName: !Ref CharactersDataSourceName
        CharactersTableName: !Ref CharactersTableName # Added missing parameter
        ConditionsTableName: !Ref ConditionsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn # Pass down
        
  CharacterConditionResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - DataSourcesStack
      - CharacterResolversStack
    Properties:
      TemplateURL: ./character-condition-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        CharactersTableName: !Ref CharactersTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  ObjectResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataSourcesStack
    Properties:
      TemplateURL: ./object-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn
        ObjectsTableName: !Ref ObjectsTableName

  ActionResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - AppSyncLambdaServiceRole
    Properties:
       TemplateURL: ./action-resolvers.yaml
       Parameters:
         ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
         ActionsDataSourceName: !Ref ActionsDataSourceName # Corrected Indent
         ActionsTableName: !Ref ActionsTableName # Corrected Indent
         AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn # Corrected Indent

  ConditionResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./condition-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        ConditionsDataSourceName: !Ref ConditionsDataSourceName
        ConditionsTableName: !Ref ConditionsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  ThoughtResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./thought-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        ThoughtsDataSourceName: !Ref ThoughtsDataSourceName
        ThoughtsTableName: !Ref ThoughtsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn


  AppSyncLambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      Policies:
        - PolicyName: InvokeLambdaFunction
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: '*'

  ActionCharacterResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./action-character-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        CharactersTableName: !Ref CharactersTableName
        ActionsTableName: !Ref ActionsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  ObjectCharacterResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./object-character-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        CharactersTableName: !Ref CharactersTableName
        ObjectsTableName: !Ref ObjectsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  EncounterResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataSourcesStack
    Properties:
      TemplateURL: ./encounter-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        EncountersDataSourceName: !Ref EncountersDataSourceName

  # Create this stack first
  EncounterEventResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./encounter-event-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        EncountersDataSourceName: !Ref EncountersDataSourceName
        
  # Then create this stack that depends on it
  EncounterCharacterResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
      - EncounterEventResolversStack # Make sure this stack is created after the event resolvers
    Properties:
      TemplateURL: ./encounter-character-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        EncountersTableName: !Ref EncountersTableName
        CharactersTableName: !Ref CharactersTableName
        ActionsTableName: !Ref ActionsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  EncounterObjectResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./encounter-object-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        EncountersTableName: !Ref EncountersTableName
        ObjectsTableName: !Ref ObjectsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  EncounterTerrainResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./encounter-terrain-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        EncountersTableName: !Ref EncountersTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

  ComputedResolversStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DataSourcesStack
      - ApiStack
      - AppSyncLambdaServiceRole
    Properties:
      TemplateURL: ./computed-resolvers.yaml
      Parameters:
        ApiId: !GetAtt ApiStack.Outputs.GraphQLApiId
        CharactersTableName: !Ref CharactersTableName
        ObjectsTableName: !Ref ObjectsTableName
        ActionsTableName: !Ref ActionsTableName
        ConditionsTableName: !Ref ConditionsTableName
        ThoughtsTableName: !Ref ThoughtsTableName
        AppSyncLambdaServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn

Outputs:
  AppSyncAPIEndpoint:
    Description: 'GraphQL API Custom Domain'
    Value: !Sub "${ApiStack.Outputs.AppSyncEndpoint}/graphql"
  AppSyncAPIKey:
    Description: 'GraphQL API Key'
    Value: !GetAtt ApiStack.Outputs.AppSyncApiKey