AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: 'AppSync Object Resolvers, Data Sources, and Functions'

Parameters:
  ApiId:
    Type: String
    Description: 'AppSync GraphQL API ID'
  AppSyncLambdaServiceRoleArn:
    Type: String
    Description: 'ARN of the IAM role for AppSync to invoke Lambda functions'
  ObjectsTableName:
    Type: String
    Description: 'Name of the Objects table'

Globals:
  Function:
    Timeout: 30
    MemorySize: 128 
    Runtime: nodejs20.x 
    Architectures:
      - x86_64

Resources:
  # Lambda functions for Object resolvers
  GetObjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/getObject.handler
      CodeUri: ../
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ObjectsTableName
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          OBJECTS_TABLE_NAME: !Ref ObjectsTableName

  ListObjectsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/listObjects.handler
      CodeUri: ../
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ObjectsTableName
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          OBJECTS_TABLE_NAME: !Ref ObjectsTableName

  CreateObjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/createObject.handler
      CodeUri: ../
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ObjectsTableName
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          OBJECTS_TABLE_NAME: !Ref ObjectsTableName

  UpdateObjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/updateObject.handler
      CodeUri: ../
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ObjectsTableName
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          OBJECTS_TABLE_NAME: !Ref ObjectsTableName

  DeleteObjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/deleteObject.handler
      CodeUri: ../
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ObjectsTableName
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          OBJECTS_TABLE_NAME: !Ref ObjectsTableName

  ResolveObjectEquipmentFunction: # New Function
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/resolveObjectParts.handler
      CodeUri: ../
      MemorySize: 256 
      Policies:
        - DynamoDBReadPolicy: 
            TableName: !Ref ObjectsTableName 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          OBJECTS_TABLE_NAME: !Ref ObjectsTableName # Corrected Env Var Name

  # Lambda Data Sources for Object Resolvers
  GetObjectLambdaDataSource:
    Type: AWS::AppSync::DataSource
    DependsOn: GetObjectFunction
    Properties:
      ApiId: !Ref ApiId
      Name: GetObjectLambdaDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !Ref AppSyncLambdaServiceRoleArn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt GetObjectFunction.Arn

  ListObjectsLambdaDataSource:
    Type: AWS::AppSync::DataSource
    DependsOn: ListObjectsFunction
    Properties:
      ApiId: !Ref ApiId
      Name: ListObjectsLambdaDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !Ref AppSyncLambdaServiceRoleArn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt ListObjectsFunction.Arn

  CreateObjectLambdaDataSource:
    Type: AWS::AppSync::DataSource
    DependsOn: CreateObjectFunction
    Properties:
      ApiId: !Ref ApiId
      Name: CreateObjectLambdaDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !Ref AppSyncLambdaServiceRoleArn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt CreateObjectFunction.Arn

  UpdateObjectLambdaDataSource:
    Type: AWS::AppSync::DataSource
    DependsOn: UpdateObjectFunction
    Properties:
      ApiId: !Ref ApiId
      Name: UpdateObjectLambdaDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !Ref AppSyncLambdaServiceRoleArn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt UpdateObjectFunction.Arn

  DeleteObjectLambdaDataSource:
    Type: AWS::AppSync::DataSource
    DependsOn: DeleteObjectFunction
    Properties:
      ApiId: !Ref ApiId
      Name: DeleteObjectLambdaDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !Ref AppSyncLambdaServiceRoleArn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt DeleteObjectFunction.Arn

  ResolveObjectPartsLambdaDataSource: # New Data Source
    Type: AWS::AppSync::DataSource
    DependsOn: ResolveObjectEquipmentFunction
    Properties:
      ApiId: !Ref ApiId
      Name: ResolveObjectPartsLambdaDataSource 
      Type: AWS_LAMBDA
      ServiceRoleArn: !Ref AppSyncLambdaServiceRoleArn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt ResolveObjectEquipmentFunction.Arn

  # Object Resolvers
  GetObjectResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GetObjectLambdaDataSource
    Properties:
      ApiId: !Ref ApiId
      TypeName: 'Query'
      FieldName: 'getObject'
      DataSourceName: "GetObjectLambdaDataSource"
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": $util.toJson($context.arguments)
        }
      ResponseMappingTemplate: '$util.toJson($context.result)'

  ListObjectsResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: ListObjectsLambdaDataSource
    Properties:
      ApiId: !Ref ApiId
      TypeName: 'Query'
      FieldName: 'listObjects'
      DataSourceName: "ListObjectsLambdaDataSource"
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": $util.toJson($context.arguments)
        }
      ResponseMappingTemplate: '$util.toJson($context.result)'

  CreateObjectResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: CreateObjectLambdaDataSource
    Properties:
      ApiId: !Ref ApiId
      TypeName: Mutation
      FieldName: createObject
      DataSourceName: "CreateObjectLambdaDataSource"
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": $util.toJson($context.arguments)
        }
      ResponseMappingTemplate: '$util.toJson($context.result)'

  UpdateObjectResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: UpdateObjectLambdaDataSource
    Properties:
      ApiId: !Ref ApiId
      TypeName: Mutation
      FieldName: updateObject
      DataSourceName: "UpdateObjectLambdaDataSource"
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": $util.toJson($context.arguments)
        }
      ResponseMappingTemplate: '$util.toJson($context.result)'

  DeleteObjectResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DeleteObjectLambdaDataSource
    Properties:
      ApiId: !Ref ApiId
      TypeName: Mutation
      FieldName: deleteObject
      DataSourceName: "DeleteObjectLambdaDataSource"
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": $util.toJson($context.arguments)
        }
      ResponseMappingTemplate: '$util.toJson($context.result)'

  ObjectEquipmentResolver: # New Resolver
    Type: AWS::AppSync::Resolver
    DependsOn: ResolveObjectPartsLambdaDataSource
    Properties:
      ApiId: !Ref ApiId
      TypeName: Object 
      FieldName: equipment
      DataSourceName: "ResolveObjectPartsLambdaDataSource"
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "source": $util.toJson($context.source)
          }
        }
      ResponseMappingTemplate: '$util.toJson($context.result)'
