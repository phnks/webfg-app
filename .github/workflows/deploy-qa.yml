name: Deploy QA Environment per PR

on:
  pull_request:
    types: [opened, synchronize, reopened] # Trigger on PR creation/update
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy-gql-qa:
    name: Deploy GQL to QA (PR-${{ github.event.number }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webfg-gql
    env:
      DEPLOYMENT_ID: ${{ github.event.number }} # Use PR number as Deployment ID
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli
        working-directory: . # Run at root

      - name: Install GQL dependencies
        run: npm install

      - name: Deploy GQL QA Stack (PR-${{ env.DEPLOYMENT_ID }})
        run: npm run deploy:qa # DEPLOYMENT_ID is passed via env var

  deploy-gm-app-qa:
    name: Deploy GM App to QA (PR-${{ github.event.number }})
    runs-on: ubuntu-latest
    needs: deploy-gql-qa # Run after GQL deployment
    defaults:
      run:
        working-directory: ./webfg-gm-app
    env:
      DEPLOYMENT_ID: ${{ github.event.number }} # Use PR number as Deployment ID
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli
        working-directory: . # Run at root

      - name: Install GM App dependencies
        run: npm install

      - name: Deploy GM App QA Stack (PR-${{ env.DEPLOYMENT_ID }})
        run: npm run deploy:qa # DEPLOYMENT_ID is passed via env var
