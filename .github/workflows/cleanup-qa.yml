name: Cleanup QA Environment on PR Close

on:
  pull_request:
    types: [closed] # Trigger when a PR is closed (merged or just closed)
  workflow_dispatch: # Allow manual trigger

jobs:
  cleanup-qa-stacks:
    name: Delete QA Stacks (PR-${{ github.event.number }})
    runs-on: ubuntu-latest
    env:
      DEPLOYMENT_ID: ${{ github.event.number }}
      GQL_STACK_NAME: webfg-gql-qa${{ github.event.number }}
      GQL_BUCKET_STACK_NAME: webfg-gql-schema-qa${{ github.event.number }} # Add bucket stack name
      GM_APP_STACK_NAME: webfg-gm-app-qa${{ github.event.number }}
      PLAYER_APP_STACK_NAME: webfg-player-app-qa${{ github.event.number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Delete GQL Stacks (Main & Bucket)
        working-directory: ./webfg-gql
        run: bash scripts/delete.sh qa ${{ env.DEPLOYMENT_ID }} # Call script

      - name: Delete GM App Stack
        working-directory: ./webfg-gm-app
        run: bash scripts/delete.sh qa ${{ env.DEPLOYMENT_ID }} # Call script

      - name: Delete Player App Stack
        working-directory: ./webfg-player-app
        run: bash scripts/delete.sh qa ${{ env.DEPLOYMENT_ID }} # Call script

      # Note: The delete scripts handle waiting and bucket emptying internally
      # - name: Wait for GQL Stack Deletion
      #   run: aws cloudformation wait stack-delete-complete --stack-name ${{ env.GQL_STACK_NAME }} || echo "Stack deletion wait failed or stack didn't exist."
      # - name: Wait for GM App Stack Deletion
      #   run: aws cloudformation wait stack-delete-complete --stack-name ${{ env.GM_APP_STACK_NAME }} || echo "Stack deletion wait failed or stack didn't exist."
